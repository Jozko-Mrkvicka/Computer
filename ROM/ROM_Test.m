label = ...
{
	'LABEL'
};
for (idx = 1:size(label))
	eval([char(label(idx)),'  = bitor(c.LABEL_SRC_PREFIX,  idx);']);
	eval([char(label(idx)),'_ = bitor(c.LABEL_DEST_PREFIX, idx);']);
end
c.LBL_CNT = idx;



SourceCode = ...
[
				MOVL		r2			c.RAM_START	...
				MOVL		r0			h81			...
				MOVU		r0			h56			...
				STORE		m(r2)		r0			...
				LOADU		r1			m(r2)		...
				LOADL		r3			m(r2)		...
	LABEL_		JMP			LABEL					...
];





	% LABEL_			MOVU		base 						msb(c.VRAM_START)			... % Initialize upper byte of the base register with upper byte of the VRAM start address.
	% 				MOVL		r0							5							...
	% 				STOREI		lsb(c.VIDEO_CTRL)			r0							...
	% 				MOVL		r0							4							...
	% 				STOREI		lsb(c.VIDEO_CTRL)			r0							...
	% 				JMP			LABEL													...
					% MOVL		r0							3							...
					% MOVL		col							0							...
					% MOVL		row							0							...
					% STOREI		lsb(c.VIDEO_CTRL)			r0							...
					% LOADI		r1							lsb(c.VIDEO_CTRL)           ...
					% MOVL		col							1							...
					% MOVL		row							1							...
					% LOADI		r2							lsb(c.VIDEO_CTRL)           ...
					% MOVL		col									15							...
					% MOVL		row									23							...
					% STOREI		lsb(c.VIDEO_CTRL)					r0							...
					% STOREI		lsb(c.VRAM_START + 16)				r0							...
					% MOVL		r0									125							...
					% STOREI		lsb(c.VRAM_START + 32 - 1)			r0							...
					% LOADI		r1									lsb(c.VRAM_START + 16)		...
					% STOREI		lsb(c.VRAM_START + 16 + 2)			r1							...
					% MOVU		r0									0							...
					% STOREI		lsb(c.VRAM_START + c.VRAM_SIZE - 1)	r0							...
	% 				MOVL		r0			lsb(c.RAND_NUM_GEN)	...
	% 				MOVU		r0 			msb(c.RAND_NUM_GEN)	...
					% ADD			r0			

