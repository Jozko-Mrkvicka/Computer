Label = ...
{
    'COPY_TXT0',
    'COPY_TXT1',
    'COPY_TXT2',
    'COPY_TXT3',
    'COPY_ASCII',
    'LABEL',
};
PreprocessorLabel


Const = ...
{
... Please note that "typos" in strings are made intentionally to correctly format the diplayed text.
    TEXT    'txt0'      'Hello Dave,' ;
    TEXT    'txt1'      'the 9000 series is the most reliable    computer ever made.' ;
    TEXT    'txt2'      'No 9000 computer has ever made a mistakeor distorted information. We are all, byany practical definition of the words,  foolproof and incapable of error.' ;
    TEXT    'txt3'      '### INSTALLED ASCII TABLE ###';
};
PreprocessorConst


% Number of characters in one line on the screen.
LINE = 40;


SourceCode = ...
[
...                 Display text string from data ROM to screen.                ...
                    MOVL        r3              0                               ...
                    MOVL        r0              lsb(txt0)                       ... % Set address of a constant text string (in data ROM).
                    MOVU        r0              msb(txt0)                       ...
                    MOVL        r1              lsb(c.VRAM_START + LINE * 0)    ... % Set address of the screen.
                    MOVU        r1              msb(c.VRAM_START)               ...
    COPY_TXT0_      LDL         r2              m(r0)                           ... % Load the text string to video memory.
                    STL         m(r1)           r2                              ...
                    ADDI        r0              1                               ... % Move to next character.
                    ADDI        r1              1                               ...
                    CMP         r3              r2                              ... % Check zero-terminated string.
                    JLT         COPY_TXT0                                       ...
                                                                                ...
                                                                                ...
...                 Display text string from data ROM to screen.                ...
                    MOVL        r3              0                               ...
                    MOVL        r0              lsb(txt1)                       ... % Set address of a constant text string (in data ROM).
                    MOVU        r0              msb(txt1)                       ...
                    MOVL        r1              lsb(c.VRAM_START + LINE * 2)    ... % Set address of the screen.
                    MOVU        r1              msb(c.VRAM_START + LINE * 2)    ...
    COPY_TXT1_      LDL         r2              m(r0)                           ... % Load the text string to video memory.
                    STL         m(r1)           r2                              ...
                    ADDI        r0              1                               ... % Move to next character.
                    ADDI        r1              1                               ...
                    CMP         r3              r2                              ... % Check zero-terminated string.
                    JLT         COPY_TXT1                                       ...
                                                                                ...
                                                                                ...
...                 Display text string from data ROM to screen.                ...
                    MOVL        r3              0                               ...
                    MOVL        r0              lsb(txt2)                       ... % Set address of a constant text string (in data ROM).
                    MOVU        r0              msb(txt2)                       ...
                    MOVL        r1              lsb(c.VRAM_START + LINE * 4)    ... % Set address of the screen.
                    MOVU        r1              msb(c.VRAM_START + LINE * 4)    ...
    COPY_TXT2_      LDL         r2              m(r0)                           ... % Load the text string to video memory.
                    STL         m(r1)           r2                              ...
                    ADDI        r0              1                               ... % Move to next character.
                    ADDI        r1              1                               ...
                    CMP         r3              r2                              ... % Check zero-terminated string.
                    JLT         COPY_TXT2                                       ...
                                                                                ...
                                                                                ...
...                 Display text string from data ROM to screen.                ...
                    MOVL        r3              0                               ...
                    MOVL        r0              lsb(txt3)                       ... % Set address of a constant text string (in data ROM).
                    MOVU        r0              msb(txt3)                       ...
                    MOVL        r1              lsb(c.VRAM_START + LINE * 9)    ... % Set address of the screen.
                    MOVU        r1              msb(c.VRAM_START + LINE * 9)    ...
    COPY_TXT3_      LDL         r2              m(r0)                           ... % Load the text string to video memory.
                    STL         m(r1)           r2                              ...
                    ADDI        r0              1                               ... % Move to next character.
                    ADDI        r1              1                               ...
                    CMP         r3              r2                              ... % Check zero-terminated string.
                    JLT         COPY_TXT3                                       ...
                                                                                ...
                                                                                ...
...                 Display whole ASCII table to the screen.                    ...
                    MOVL        r3              lsb(255)                        ...
                    MOVU        r3              msb(255)                        ...
                    MOVL        r1              lsb(c.VRAM_START + LINE * 10)   ... % Set address of the screen.
                    MOVU        r1              msb(c.VRAM_START + LINE * 10)   ...
                    MOVL        r0              32                              ... % Initialize first character to display.
    COPY_ASCII_     STL         m(r1)           r0                              ...
                    ADDI        r0              1                               ... % Move to next character.
                    ADDI        r1              1                               ...
                    CMP         r0              r3                              ... % Check if all ASCII characters were printed.
                    JLT         COPY_ASCII                                      ...
                                                                                ...
                                                                                ...
    LABEL_          JMP         LABEL                                           ...
];

