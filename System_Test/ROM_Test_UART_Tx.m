%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% UART Transmitter system test.
% This is a manual test. Before running it, please establish virtual serial connection
% between any Windows terminal (e.g. Putty connected to COM6) and COM5. Haluska9000`s UART
% will be automatically connected (using Matlab callback functions) to COM5.
% Test will send a text string to the terminal.
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
label = ...
{
    'LABEL'
};
for (idx = 1:size(label))
    eval([char(label(idx)),'  = bitor(c.LABEL_SRC_PREFIX,  idx);']);
    eval([char(label(idx)),'_ = bitor(c.LABEL_DEST_PREFIX, idx);']);
end
c.LBL_CNT = idx;


SourceCode = ...
[
                MOVL        r0                      0x41                    ... % Assign data (0x41 == 'A') to transmit.
                                                                            ...
                SGMT        msb(c.UART_TX)                                  ... % Assign memory address.
                STLI        lsb(c.UART_TX)          r0                      ...
                                                                            ...
                ADDI        r0                      0                       ... % Wait for UART to transmit data.
                ADDI        r0                      0                       ...
                ADDI        r0                      0                       ...
                ADDI        r0                      0                       ...
                ADDI        r0                      0                       ...
                ADDI        r0                      0                       ...
                ADDI        r0                      0                       ...
                ADDI        r0                      0                       ...
                ADDI        r0                      0                       ...
                ADDI        r0                      0                       ...
                ADDI        r0                      0                       ...
                ADDI        r0                      0                       ...
                ADDI        r0                      0                       ...
                ADDI        r0                      0                       ...
                ADDI        r0                      0                       ...
                ADDI        r0                      0                       ...
                ADDI        r0                      0                       ...
                ADDI        r0                      0                       ...
                ADDI        r0                      0                       ...
                ADDI        r0                      0                       ...
                                                                            ...
    LABEL_      JMP         LABEL                                           ...
];

