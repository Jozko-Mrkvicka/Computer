label = ...
{
	'LABEL'
	'FUNCTION_1'
	'FUNCTION_2'
	'FUNCTION_3'
	'FUNCTION_4'
};
for (idx = 1:size(label))
	eval([char(label(idx)),'  = bitor(c.LABEL_SRC_PREFIX,  idx);']);
	eval([char(label(idx)),'_ = bitor(c.LABEL_DEST_PREFIX, idx);']);
end
c.LBL_CNT = idx;


% This test checks instructions CALL and RET.
SourceCode = ...
[
				CALL		FUNCTION_1				... % If instruction CALL is not working then registers will stay set to 0x0000.
				JMP			LABEL					...
													...
													...
FUNCTION_2_		MOVL		r0			h22			... % Set registers to 0x2222.
				MOVU		r0			h22			...
				MOVL		r1			h22			...
				MOVU		r1			h22			...
				MOVL		r2			h22			...
				MOVU		r2			h22			...
				MOVL		r3			h22			...
				MOVU		r3			h22			...
				CALL		FUNCTION_3				...
				RET									...
													...
													...
FUNCTION_4_		MOVL		r0			h44			... % Set registers to 0x4444.
				MOVU		r0			h44			...
				MOVL		r1			h44			...
				MOVU		r1			h44			...
				MOVL		r2			h44			...
				MOVU		r2			h44			...
				MOVL		r3			h44			...
				MOVU		r3			h44			...
				RET									...
													...
													...
FUNCTION_1_		MOVL		r0			h11			... % Set registers to 0x1111.
				MOVU		r0			h11			...
				MOVL		r1			h11			...
				MOVU		r1			h11			...
				MOVL		r2			h11			...
				MOVU		r2			h11			...
				MOVL		r3			h11			...
				MOVU		r3			h11			...
				CALL		FUNCTION_2				...				
				RET									...
													...
													...
FUNCTION_3_		MOVL		r0			h33			... % Set registers to 0x3333.
				MOVU		r0			h33			...
				MOVL		r1			h33			...
				MOVU		r1			h33			...
				MOVL		r2			h33			...
				MOVU		r2			h33			...
				MOVL		r3			h33			...
				MOVU		r3			h33			...
				CALL		FUNCTION_4				...
				RET									...
													...
													...
				MOVL		r0			h55			... % If instruction RET is not working then registers will be set to 0x5555.
				MOVU		r0			h55			...
				MOVL		r1			h55			...
				MOVU		r1			h55			...
				MOVL		r2			h55			...
				MOVU		r2			h55			...
				MOVL		r3			h55			...
				MOVU		r3			h55			...
													...
													...
	LABEL_		JMP			LABEL					... % Expected results: r0 == 0x4444, r1 == 0x4444, r2 == 0x4444, r3 == 0x4444
];

