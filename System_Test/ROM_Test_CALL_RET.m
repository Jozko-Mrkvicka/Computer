label = ...
{
	'LABEL'
	'FUNCTION'
};
for (idx = 1:size(label))
	eval([char(label(idx)),'  = bitor(c.LABEL_SRC_PREFIX,  idx);']);
	eval([char(label(idx)),'_ = bitor(c.LABEL_DEST_PREFIX, idx);']);
end
c.LBL_CNT = idx;


% This test checks instruction PUSH, POP, CALL and RET.
SourceCode = ...
[
				MOVL		r0			h11			... % Init registers to 0x1111.
				MOVU		r0			h11			...
													...
				MOVL		r1			h11			...
				MOVU		r1			h11			...
													...
				MOVL		r2			h11			...
				MOVU		r2			h11			...
													...
				MOVL		r3			h11			...
				MOVU		r3			h11			...
													...
													...
				CALL		FUNCTION				... % If instruction CALL is not working then registers will be set to 0x1111.
				JMP			LABEL					...
													...
													...
FUNCTION_		MOVL		r0			h22			... % Set registers to 0x2222.
				MOVU		r0			h22			...
													...
				MOVL		r1			h22			...
				MOVU		r1			h22			...
													...
				MOVL		r2			h22			...
				MOVU		r2			h22			...
													...
				MOVL		r3			h22			...
				MOVU		r3			h22			...
													...
				RET									...
													...
													...
				MOVL		r0			h33			... % If instruction RET is not working then registers will be set to 0x3333.
				MOVU		r0			h33			...
													...
				MOVL		r1			h33			...
				MOVU		r1			h33			...
													...
				MOVL		r2			h33			...
				MOVU		r2			h33			...
													...
				MOVL		r3			h33			...
				MOVU		r3			h33			...
													...
													...
	LABEL_		JMP			LABEL					... % Expected results: r0 == 0x2222, r1 == 0x2222, r2 == 0x2222, r3 == 0x2222
];

