%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% System test for instructions CALL and RET.
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
switch section
case 'LABEL'
Label = ...
{
    'LABEL'
    'FUNCTION_1'
    'FUNCTION_2'
    'FUNCTION_3'
    'FUNCTION_4'
};


case 'CODE'
SourceCode = ...
[
                CALL        FUNCTION_1              ... % If instruction CALL is not working then registers will stay set to 0x0000.
                JMP         LABEL                   ...
                                                    ...
                                                    ...
FUNCTION_2_     MOVL        r0          0x22        ... % Set registers to 0x2222.
                MOVU        r0          0x22        ...
                MOVL        r1          0x22        ...
                MOVU        r1          0x22        ...
                MOVL        r2          0x22        ...
                MOVU        r2          0x22        ...
                MOVL        r3          0x22        ...
                MOVU        r3          0x22        ...
                CALL        FUNCTION_3              ...
                RET                                 ...
                                                    ...
                                                    ...
FUNCTION_4_     MOVL        r0          0x44        ... % Set registers to 0x4444.
                MOVU        r0          0x44        ...
                MOVL        r1          0x44        ...
                MOVU        r1          0x44        ...
                MOVL        r2          0x44        ...
                MOVU        r2          0x44        ...
                MOVL        r3          0x44        ...
                MOVU        r3          0x44        ...
                RET                                 ...
                                                    ...
                                                    ...
FUNCTION_1_     MOVL        r0          0x11        ... % Set registers to 0x1111.
                MOVU        r0          0x11        ...
                MOVL        r1          0x11        ...
                MOVU        r1          0x11        ...
                MOVL        r2          0x11        ...
                MOVU        r2          0x11        ...
                MOVL        r3          0x11        ...
                MOVU        r3          0x11        ...
                CALL        FUNCTION_2              ...             
                RET                                 ...
                                                    ...
                                                    ...
FUNCTION_3_     MOVL        r0          0x33        ... % Set registers to 0x3333.
                MOVU        r0          0x33        ...
                MOVL        r1          0x33        ...
                MOVU        r1          0x33        ...
                MOVL        r2          0x33        ...
                MOVU        r2          0x33        ...
                MOVL        r3          0x33        ...
                MOVU        r3          0x33        ...
                CALL        FUNCTION_4              ...
                RET                                 ...
                                                    ...
                                                    ...
                MOVL        r0          0x55        ... % If instruction RET is not working then registers will be set to 0x5555.
                MOVU        r0          0x55        ...
                MOVL        r1          0x55        ...
                MOVU        r1          0x55        ...
                MOVL        r2          0x55        ...
                MOVU        r2          0x55        ...
                MOVL        r3          0x55        ...
                MOVU        r3          0x55        ...
                                                    ...
                                                    ...
    LABEL_      JMP         LABEL                   ... % Expected results: r0 == 0x4444, r1 == 0x4444, r2 == 0x4444, r3 == 0x4444
];
end
