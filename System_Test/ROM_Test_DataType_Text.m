%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% The TEXT datatype system test
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
switch section
case 'LABEL'
Label = ...
{
    'LOOP',
    'WAIT'
};


case 'CONST'
ConstData = ...
{
    BYTE    'VAR1'    {101, 102, 103, 104, 105}
    BYTE    'VAR2'    {0}
    TEXT    'TXT0'    {'The 9000 series is the most reliable computer ever made.'};
    BYTE    'VAR3'    {255}
    BYTE    'VAR4'    {0}
    TEXT    'TXT1'    {'No 9000 computer has ever made a mistake or distorted information.'};
    BYTE    'VAR5'    {255}
};


case 'CODE'
SourceCode = ...
[                                                                           ...
                MOVL        r0                      lsb(TXT0)               ... Assign source address.
                MOVU        r0                      msb(TXT0)               ...
                MOVL        r1                      lsb(RAM_START)          ... Assign destination address.
                MOVU        r1                      msb(RAM_START)          ...
                                                                            ...
    LOOP_       LDL         r2                      m(r0)                   ... Copy one byte from ROM to RAM.
                STL         m(r1)                   r2                      ...
                                                                            ...
                ADDI        r0                      1                       ... Move pointer to next byte.
                ADDI        r1                      1                       ...
                                                                            ...
                CMPI        r2                      NULL                    ... % Check if all bytes were already sent...
                JPE         WAIT                                            ...
                JMP         LOOP                                            ... % ...If not then send another character.
                                                                            ...
    WAIT_       JMP         WAIT                                            ...
];
end
