function Test_Logic_Operations()
	V1_Count = [0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 -1 -2 -3 -4 -5 -6 -7 -8 -9 -10 -11 -12 -13 -14 -15];
	V1_Data(1:size(V1_Count, 2)) = bin2dec('11111111 11111111');
	V1_Input = [0:(size(V1_Count, 2) - 1); V1_Count; V1_Data];
	V1_Expected = ...
	[
		bin2dec('11111111 11111111')  ...
		bin2dec('11111111 11111110')  ...
		bin2dec('11111111 11111100')  ...
		bin2dec('11111111 11111000')  ...
		bin2dec('11111111 11110000')  ...
		bin2dec('11111111 11100000')  ...
		bin2dec('11111111 11000000')  ...
		bin2dec('11111111 10000000')  ...
		bin2dec('11111111 00000000')  ...
		bin2dec('11111110 00000000')  ...
		bin2dec('11111100 00000000')  ...
		bin2dec('11111000 00000000')  ...
		bin2dec('11110000 00000000')  ...
		bin2dec('11100000 00000000')  ...
		bin2dec('11000000 00000000')  ...
		bin2dec('10000000 00000000')  ...
									  ...
		bin2dec('01111111 11111111')  ...
		bin2dec('00111111 11111111')  ...
		bin2dec('00011111 11111111')  ...
		bin2dec('00001111 11111111')  ...
		bin2dec('00000111 11111111')  ...
		bin2dec('00000011 11111111')  ...
		bin2dec('00000001 11111111')  ...
		bin2dec('00000000 11111111')  ...
		bin2dec('00000000 01111111')  ...
		bin2dec('00000000 00111111')  ...
		bin2dec('00000000 00011111')  ...
		bin2dec('00000000 00001111')  ...
		bin2dec('00000000 00000111')  ...
		bin2dec('00000000 00000011')  ...
		bin2dec('00000000 00000001')  ...
	];


	test('Test_Logic_Operation_Bitwise_Shift',  V1_Input, V1_Expected);
end

