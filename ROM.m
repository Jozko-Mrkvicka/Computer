clc
% Load symbolic constants (instructions)
Instructions
% Addresses
% Video_Adapter
% CharTable





% Demo: When button "6" is pressed then cursor (pixel) moves to the right.
LABEL_DEST_PREFIX = hex2dec('FF80');
LABEL_SRC_PREFIX =  hex2dec('FF40');

LOOP_  = bitor(LABEL_DEST_PREFIX, 1);
LOOP   = bitor(LABEL_SRC_PREFIX,  1);

% BACK_  = bitor(LABEL_DEST_PREFIX, 2);
% BACK   = bitor(LABEL_SRC_PREFIX,  2);

LEFT_  = bitor(LABEL_DEST_PREFIX, 3);
LEFT   = bitor(LABEL_SRC_PREFIX,  3);

RIGHT_ = bitor(LABEL_DEST_PREFIX, 4);
RIGHT  = bitor(LABEL_SRC_PREFIX,  4);

UP_    = bitor(LABEL_DEST_PREFIX, 5);
UP     = bitor(LABEL_SRC_PREFIX,  5);

DOWN_  = bitor(LABEL_DEST_PREFIX, 6);
DOWN   = bitor(LABEL_SRC_PREFIX,  6);

EXIT_  = bitor(LABEL_DEST_PREFIX, 7);
EXIT   = bitor(LABEL_SRC_PREFIX,  7);

RomCode = ...
[
		MRC		r0		8				... % X-position
		MRC		r1		12				... % Y-position
										...
		MRC		r2		2				... % Buttons definition
		MRC		r4		4				...
		MRC		r5		5				...
		MRC		r6		6				...
		MRC		r7		8				...
										...
LOOP_	GCH		r3		r3				... % Read keyboard input
		SPX		r0		r1		ON		...
		JPE		r3		r2		DOWN	... % Button 8 was pressed ...
		JPE		r3		r4		LEFT	... % Button 4 was pressed ...
		JPE		r3		r5		EXIT	... % Button 2 was pressed ...
		JPE		r3		r6		RIGHT	... % Button 6 was pressed ...
		JPE		r3		r7		UP		... % Button 8 was pressed ...
		JPE		r0		r0		LOOP	... 
										...
LEFT_	SPX		r0		r1		OFF		...
		SUBI	r0		1				...
		JPE		r0		r0		LOOP	...
										...
RIGHT_	SPX		r0		r1		OFF		...
		ADDI	r0		1				...
		JPE		r0		r0		LOOP	...
										...
UP_		SPX		r0		r1		OFF		...
		SUBI	r1		1				...
		JPE		r0		r0		LOOP	...
										...
DOWN_	SPX		r0		r1		OFF		...
		ADDI	r1		1				...
		JPE		r0		r0		LOOP	...
										...
EXIT_	ADDI	r0		0				...
		ADDI	r0		0				...
		ADDI	r0		0				...
		ADDI	r0		0				...
		ADDI	r1		0				...
]




% RomCode = reshape(transpose(RomCode), [], 1)
RomCode = Preprocessor(RomCode);
transpose(RomCode)


% % Demo: Delete whole screen (bottom -> up -> bottom)
% LABEL_DEST_PREFIX = hex2dec('FF80');
% LABEL_SRC_PREFIX =  hex2dec('FF40');

% UPROW_ = bitor(LABEL_DEST_PREFIX, 1);
% UPROW  = bitor(LABEL_SRC_PREFIX,  1);

% UPCOL_ = bitor(LABEL_DEST_PREFIX, 2);
% UPCOL  = bitor(LABEL_SRC_PREFIX,  2);

% DNROW_ = bitor(LABEL_DEST_PREFIX, 3);
% DNROW  = bitor(LABEL_SRC_PREFIX,  3);

% DNCOL_ = bitor(LABEL_DEST_PREFIX, 4);
% DNCOL  = bitor(LABEL_SRC_PREFIX,  4);

% RomCode = ...
% [
% 		MRC		r1		24					...
% 		MRC		r2		16					...
% 											...
% UPCOL_	SUBI	r1		1					...
% 		MRC		r0		MIN_X				...
% UPROW_	SPX		r0		r1		ON			...
% 		ADDI	r0		1					...
% 		JNE		r0		r2		UPROW		...
% 		JNE		r1		r3  	UPCOL		...
% 											...
% 		MRC		r1		0					...
% 		MRC		r3		24					...
% 											...
% DNCOL_	MRC		r0		MIN_X				...
% DNROW_	SPX		r0		r1		OFF			...
% 		ADDI	r0		1					...
% 		JNE		r0		r2  	DNROW		...
% 		ADDI	r1		1					...
% 		JNE		r1		r3  	DNCOL		...
% ]



% % Demo: Nakresli 4 pixely
% RomCode = ...
% [                           % Address
% 	MRC   r0  0      ... % 0
% 	MRC   r1  0      ... % 2
% 	                ...
% 	MRC   r2  5      ... % 4
% 	SPX   r0  r1 1   ... % 6
% 	ADDI  r0  1      ... % 8
% 	ADDI  r1  1      ... % 10
% 	JNE   r0  r2 6   ... % 12
% 	ADDI  r0  0      ... % 14
% ]



