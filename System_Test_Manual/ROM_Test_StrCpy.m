Label = ...
{
    'STRCPY',
    'LOOP',
    'LABEL',
};
PreprocessorLabel


Const = ...
{
... Please note that "typos" in strings are made intentionally to correctly format the diplayed text.
    TEXT    'txt0'      'Hello Dave,' ;
    TEXT    'txt1'      'the 9000 series is the most reliable    computer ever made.' ;
    TEXT    'txt2'      'No 9000 computer has ever made a mistakeor distorted information. We are all, byany practical definition of the words,  foolproof and incapable of error.' ;
};
PreprocessorConst


% Number of characters in one line on the screen.
LINE = 40;

SourceCode = ...
[
                    MOVL        r0              lsb(c.VRAM_START + LINE * 0)    ... Destination address.
                    MOVU        r0              msb(c.VRAM_START + LINE * 0)    ...
                    MOVL        r1              lsb(txt0)                       ... Source address.
                    MOVU        r1              msb(txt0)                       ...
                    CALL        STRCPY                                          ...
                                                                                ...
                    MOVL        r0              lsb(c.VRAM_START + LINE * 2)    ...
                    MOVU        r0              msb(c.VRAM_START + LINE * 2)    ...
                    MOVL        r1              lsb(txt1)                       ...
                    MOVU        r1              msb(txt1)                       ...
                    CALL        STRCPY                                          ...
                                                                                ...
                    MOVL        r0              lsb(c.VRAM_START + LINE * 4)    ...
                    MOVU        r0              msb(c.VRAM_START + LINE * 4)    ...
                    MOVL        r1              lsb(txt2)                       ...
                    MOVU        r1              msb(txt2)                       ...
                    CALL        STRCPY                                          ...
                                                                                ...
    LABEL_          JMP         LABEL                                           ...
                                                                                ...
                                                                                ...
    STRCPY_         MOVL        r4              0                               ... Initialize byte counter to zero.
    LOOP_           LDL         r3              m(r1)                           ... Load one byte from memory to temp register.
                    STL         m(r0)           r3                              ...
                    ADDI        r0              1                               ... Move destination pointer to next byte.
                    ADDI        r1              1                               ... Move source pointer to next byte.
                    ADDI        r4              1                               ...
                    CMP         r4              r2                              ... Check if all bytes were copied.
                    JLT         LOOP                                            ...
                    RET
];

